def deploy( _env ) {
	
	def DEPLOY_COMMAND="docker-compose pull && docker-compose down && docker-compose rm -f && docker-compose up -d --force-recreate"
	
	if( _env == "test" ) {
		sshagent(["test-ssh"]) {
			sh( "ssh deployer@app-test -c '${DEPLOY_COMMAND}'" )
		}
	} else if( _env == "production" ) {
		sshagent(["prod-ssh"]) {
			sh( "ssh deployer@app-prod -c '${DEPLOY_COMMAND}'" )
		}
	}
}

node {
	stage( "Checkout" ) {
		checkout scm
	}
	
	stage( "Build" ) {
		sh( "docker build --tag whole-pipeline ." )
	}
	
	stage( "Test" ) {
		try {
			sh( "docker run --entrypoint python whole-pipeline -m unittest discover" )
		} catch( Exception e ) {
			slackSend(
				color: 'error',
				message: 'whole-pipeline unit tests failed.' )
			throw e
		}
	}
	
	stage( "Push" ) {
		sh( "docker push whole-pipeline" )
	}
	
	stage( "Deploy to TEST" ) {
		deploy( "test" )
	}
	
	if( BRANCH_NAME == "master" ) {
		stage( "Deploy to PRODUCTION" ) {
			deploy( "production" )
		}
	}
}
